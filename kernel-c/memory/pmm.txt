void fill_bitmap() {
	struct memory_map_entry* entry = MEM_MAP_ENTRIS_START;
	uint32_t entry_count = *(uint32_t*)MEM_MAP_ADDRESS;

	// Mark all blocks as used initially
	for (uint32_t i = 0; i < MAX_BLOCK_NUMBER; i++) {
		bitmap_set(i, true);
	}

	// Iterate through memory map and mark usable blocks
	while (entry_count > 0) {
		uint64_t base = ((uint64_t)entry->base_hi << 32) | entry->base_low;
		uint64_t length = ((uint64_t)entry->len_hi << 32) | entry->len_low;

		if (entry->type == 1) { // Usable memory
			uint32_t start_block = base / PMM_BLOCK_SIZE;
			uint32_t block_count = length / PMM_BLOCK_SIZE;

			for (uint32_t i = 0; i < block_count; i++) {
				bitmap_set(start_block + i, false); // Mark as free
			}
		}

		entry++;
		entry_count--;
	}

	printf("\nBitmap initialization complete.\n");
}